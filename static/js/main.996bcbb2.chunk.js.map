{"version":3,"sources":["Pile.js","suit/Card.js","Foundation.js","WastePiles.js","suit/Spade.js","suit/Diamond.js","suit/Clubs.js","suit/Hearts.js","Deck.js","Game.js","App.js","serviceWorker.js","index.js"],"names":["Pile","event","dataTransfer","setData","this","props","id","react_default","a","createElement","pileid","title","onClick","draggable","onDragStart","drag","bind","className","onDrop","drop","onDragOver","value","Component","Card","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","number","symbol","associate_foundation","data-associate_foundation","Foundation","foundation_one","getFoundation","foundation_two","foundation_three","foundation_four","allowDrop","card","childNodes","innerText","split","cardSuit","cardRank","foundation","_this$getCardRankAndS","getCardRankAndSuit","stackedCardSuit","stackedCardRank","innerHTML","document","getElementById","getData","target","dataset","parentElement","foundationName","isNotValid","pileCard","getRecentStackedCard","key","setState","defineProperty","updateCard","replace","_this$getCardNumberAn","getCardNumberAndSymbol","suit_Card","preventDefault","WastePiles","cards","pile_1","setWastePiles","pile_2","pile_3","pile_4","pile_5","pile_6","pile_7","pileId","cardIndex","match","draggedPileNumber","pileNumber","cardId","pile","index","length","pileCards","slice","isFaceDownCard","pop","newCard","push","getCard","draggedCards","map","droppedPileNumber","droppedPileId","isOfSameColor","isRankGreaterThanPileCard","getCards","concat","draggedCard","_this2","piles","keys","forEach","src_Pile","element","getPlayableCardDiv","getUnplayableCardDiv","Array","fill","getCardDiv","renderPiles","Spade","class","getJoker","getQueen","getKing","Diamond","Clubs","Hearts","Deck","suits","spades","diamonds","clubs","hearts","deck","lodash","shuffle","getDeck","getAllCardsOfSuit","suit","i","aceCard","getAce","numberCards","getNumberCards","faceCards","getAllFaceCards","Game","drawnCards","getPileCards","recent_drawn_card","getOneCard","src_Foundation","updateRecentDrawnCards","updateDrawnCards","src_WastePiles","getWastePileCards","renderPile","renderFoundation","renderWastePiles","App","game","src_Game","renderGame","Boolean","window","location","hostname","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.996bcbb2.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nclass Pile extends Component {\n  drag(event) {\n    event.dataTransfer.setData(\"pile\", this.props.id);\n  }\n\n  render() {\n    return (\n      <div\n        pileid={this.props.title}\n        onClick={this.props.onClick}\n        id={this.props.id}\n        draggable={true}\n        onDragStart={this.drag.bind(this)}\n        className={this.props.className}\n        onDrop={this.props.drop}\n        onDragOver={this.props.onDragOver}\n      >\n        {this.props.value}\n      </div>\n    );\n  }\n}\n\nexport default Pile;\n","import React, { Component } from \"react\";\nclass Card extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: props.id,\n      className: props.className,\n      draggable: props.draggable,\n      onDragStart: props.onDragStart,\n      onDrop: props.onDrop,\n      onDragOver: props.onDragOver,\n      number: props.number,\n      symbol: props.symbol,\n      title: props.title,\n      associate_foundation: props.associate_foundation\n    };\n  }\n\n  render() {\n    return (\n      <div\n        data-associate_foundation={this.state.associate_foundation}\n        title={this.state.title}\n        id={this.state.id}\n        className={this.state.className}\n        draggable={this.state.draggable}\n        onDragStart={this.state.onDragStart}\n        onDrop={this.state.onDrop}\n        onDragOver={this.state.onDragOver}\n      >\n        <div className=\"header\" id={this.state.id}>\n          {this.state.number}\n        </div>\n        <div className=\"symbol\" id={this.state.id}>\n          {this.state.symbol}\n        </div>\n        <div className=\"footer\" id={this.state.id}>\n          {this.state.number}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Card;\n","import React, { Component } from \"react\";\nimport Card from \"./suit/Card\";\n\nclass Foundation extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      foundation_one: this.getFoundation(\"foundation_one\"),\n      foundation_two: this.getFoundation(\"foundation_two\"),\n      foundation_three: this.getFoundation(\"foundation_three\"),\n      foundation_four: this.getFoundation(\"foundation_four\")\n    };\n  }\n\n  getFoundation(title) {\n    return (\n      <div\n        className=\"card\"\n        onDrop={this.drop.bind(this)}\n        onDragOver={this.allowDrop.bind(this)}\n        id={title}\n        data-associate_foundation={title}\n      />\n    );\n  }\n\n  getCardNumberAndSymbol(card) {\n    let number = card.childNodes[0].innerText;\n    let symbol = card.childNodes[1].innerText;\n    return { number, symbol };\n  }\n\n  getCardRankAndSuit(card) {\n    card.id = card.id.split(\" \")[0];\n    const cardSuit = card.id.split(\"_\")[0];\n    const cardRank = card.id.split(\"_\")[1];\n    return { cardSuit, cardRank };\n  }\n\n  isNotValid(card, foundation) {\n    const { cardSuit, cardRank } = this.getCardRankAndSuit(card);\n    const stackedCardSuit = foundation.id.split(\"_\")[0];\n    const stackedCardRank = foundation.id.split(\"_\")[1];\n    return (\n      cardSuit != stackedCardSuit &&\n      cardRank != stackedCardRank + 1 &&\n      foundation.innerHTML\n    );\n  }\n\n  drop(event) {\n    const card = document.getElementById(event.dataTransfer.getData(\"card\"));\n    const { cardRank } = this.getCardRankAndSuit(card);\n    if (!event.target.dataset.associate_foundation)\n      event.target = event.target.parentElement;\n    const foundationName = event.target.dataset.associate_foundation;\n    let foundation = document.getElementById(event.target.id);\n    if (this.isNotValid(card, foundation)) return;\n    if (cardRank != 1 && foundation.innerHTML == \"\") return;\n    let pileCard = this.getRecentStackedCard(foundationName, card);\n    const key = foundationName;\n    this.setState({ [key]: pileCard });\n    this.props.updateCard();\n  }\n\n  getRecentStackedCard(foundationName, card) {\n    card.className = card.className.replace(\"waste-pile-card\", \" \");\n    const { number, symbol } = this.getCardNumberAndSymbol(card);\n    return (\n      <Card\n        associate_foundation={foundationName}\n        id={card.id}\n        key={symbol + number}\n        onDrop={this.drop.bind(this)}\n        onDragOver={this.allowDrop.bind(this)}\n        number={number}\n        draggable={true}\n        onDragStart={this.drag}\n        symbol={symbol}\n        className={card.className}\n      />\n    );\n  }\n\n  drag(event) {\n    event.dataTransfer.setData(\"card\", event.target.id);\n  }\n\n  allowDrop(event) {\n    event.preventDefault();\n  }\n\n  render() {\n    return (\n      <div id=\"four-foundation\" className=\"four-foundation\">\n        {this.state.foundation_one}\n        {this.state.foundation_two}\n        {this.state.foundation_three}\n        {this.state.foundation_four}\n      </div>\n    );\n  }\n}\n\nexport default Foundation;\n","import React, { Component } from \"react\";\nimport Pile from \"./Pile\";\nimport Card from \"./suit/Card\";\n\nclass WastePiles extends Component {\n  constructor(props) {\n    super(props);\n    this.cards = this.props.cards;\n    this.state = {\n      pile_1: this.setWastePiles(1),\n      pile_2: this.setWastePiles(2),\n      pile_3: this.setWastePiles(3),\n      pile_4: this.setWastePiles(4),\n      pile_5: this.setWastePiles(5),\n      pile_6: this.setWastePiles(6),\n      pile_7: this.setWastePiles(7)\n    };\n  }\n\n  isFaceDownCard(pileId, cardIndex) {\n    return this.state[pileId][cardIndex - 1].props.className.match(\n      /face-down-card/\n    );\n  }\n\n  getCards(card, draggedPileNumber, pileNumber) {\n    if (!draggedPileNumber) return;\n    let cardId = card.id;\n    let pileId = \"pile_\" + draggedPileNumber;\n    let pile = this.state[pileId];\n    let cardIndex = 0;\n    for (let index = 0; index < pile.length; index++) {\n      if (pile[index].props.id == cardId) {\n        cardIndex = index;\n      }\n    }\n    let pileCards = pile.slice(0, cardIndex);\n    if (!cardIndex - 1 < 0 && this.isFaceDownCard(pileId, cardIndex)) {\n      pileCards.pop();\n      let newCard = this.cards.pop();\n      pileCards.push(this.getCard(draggedPileNumber, newCard));\n    }\n    let draggedCards = pile.slice(cardIndex);\n    this.setState({ [pileId]: pileCards.slice() });\n    return draggedCards.map(this.getCard.bind(this, pileNumber));\n  }\n\n  drop(event) {\n    let droppedPileNumber = event.target.id.split(\" \").pop();\n    let droppedPileId = \"pile_\" + droppedPileNumber;\n    let card = document.getElementById(event.dataTransfer.getData(\"card\"));\n    let draggedPileNumber = card.id.split(\" \")[1];\n    let pileCard = this.state[droppedPileId][\n      this.state[droppedPileId].length - 1\n    ];\n    if (\n      this.isOfSameColor(pileCard, card) ||\n      !this.isRankGreaterThanPileCard(pileCard, card)\n    )\n      return;\n    let draggedCards = this.getCards(\n      card,\n      draggedPileNumber,\n      droppedPileNumber\n    );\n    if (!draggedCards) {\n      draggedCards = this.getCard(droppedPileNumber, card);\n      this.props.updateCard();\n    }\n    let cards = this.state[droppedPileId].concat(draggedCards);\n    this.setState({ [droppedPileId]: cards.slice() });\n  }\n\n  isOfSameColor(pileCard, draggedCard) {\n    return !(\n      (pileCard.props.className.match(/red-cards/) &&\n        !draggedCard.className.match(/red-cards/)) ||\n      (!pileCard.props.className.match(/red-cards/) &&\n        draggedCard.className.match(/red-cards/))\n    );\n  }\n\n  isRankGreaterThanPileCard(pileCard, draggedCard) {\n    const rankOfPileCard = +pileCard.props.id.split(\" \")[0].split(\"_\")[1];\n    const rankOfDraggedCard = +draggedCard.id.split(\" \")[0].split(\"_\")[1];\n    return rankOfPileCard == (rankOfDraggedCard + 1);\n  }\n\n  getCardNumberAndSymbol(card) {\n    let number = card.childNodes[0].innerText;\n    let symbol = card.childNodes[1].innerText;\n    return { number, symbol };\n  }\n\n  getCard(pileNumber, card) {\n    if (card.props) card = card.props;\n    else {\n      let { number, symbol } = this.getCardNumberAndSymbol(card);\n      card.number = number;\n      card.symbol = symbol;\n    }\n    return (\n      <Card\n        id={card.id + \" \" + pileNumber}\n        key={card.id + \" \" + pileNumber}\n        number={card.number}\n        symbol={card.symbol}\n        className={card.className + \" waste-pile-card\"}\n        draggable={true}\n        onDragStart={this.drag.bind(this)}\n      />\n    );\n  }\n\n  drag(event) {\n    let cardId = event.target.id;\n    event.dataTransfer.setData(\"card\", cardId);\n  }\n\n  renderPiles() {\n    let piles = [];\n    Object.keys(this.state).forEach((pile, index) => {\n      piles.push(\n        <Pile\n          key={index + 1}\n          id={index + 1}\n          className=\"waste-pile \"\n          value={this.state[pile]}\n        />\n      );\n    });\n    return piles;\n  }\n\n  allowDrop(event) {\n    event.preventDefault();\n  }\n\n  getPlayableCardDiv(index, card) {\n    return this.getCard(++index, card);\n  }\n\n  getUnplayableCardDiv(index) {\n    return (\n      <div\n        key={index}\n        draggable={false}\n        className=\"waste-pile-card face-down-card card\"\n      />\n    );\n  }\n\n  getCardDiv(number, card, element, index) {\n    if (index === number - 1) {\n      return this.getPlayableCardDiv(index, card);\n    }\n    return this.getUnplayableCardDiv(index);\n  }\n\n  setWastePiles(number) {\n    let card = this.cards.pop();\n    return new Array(number)\n      .fill(\"\")\n      .map(this.getCardDiv.bind(this, number, card));\n  }\n\n  render() {\n    return (\n      <div\n        id=\"waste-piles\"\n        className=\"waste-piles\"\n        onDrop={this.drop.bind(this)}\n        onDragOver={this.allowDrop}\n      >\n        {this.renderPiles()}\n      </div>\n    );\n  }\n}\n\nexport default WastePiles;\n","import React from \"react\";\nimport Card from \"./Card\";\n\nclass Spade {\n  constructor() {\n    this.class = \"card \";\n  }\n\n  drag(event) {\n    event.dataTransfer.setData(\"card\", event.target.id);\n  }\n\n  addClass(className) {\n    this.class += className;\n  }\n\n  getCard(number) {\n    return (\n      <Card\n        id={`spade_` + number}\n        key={`spade_` + number}\n        number={number}\n        symbol=\"&#9824;\"\n        className={this.class}\n        onDragStart={this.drag.bind(this)}\n        draggable={true}\n      />\n    );\n  }\n\n  getAllFaceCards() {\n    return [this.getJoker(), this.getQueen(), this.getKing()];\n  }\n\n  getAce() {\n    return (\n      <Card\n        id={`spade_1`}\n        key={`spade_1`}\n        number=\"A\"\n        symbol=\"&#9824;\"\n        className={this.class}\n        onDragStart={this.drag.bind(this)}\n        draggable={true}\n      />\n    );\n  }\n\n  getKing() {\n    return (\n      <Card\n        id={`spade_13`}\n        key={`spade_13`}\n        number=\"K\"\n        symbol=\"&#9824;\"\n        className={this.class}\n        onDragStart={this.drag.bind(this)}\n        draggable={true}\n      />\n    );\n  }\n\n  getQueen() {\n    return (\n      <Card\n        id={`spade_12`}\n        key={`spade_12`}\n        number=\"Q\"\n        symbol=\"&#9824;\"\n        className={this.class}\n        onDragStart={this.drag.bind(this)}\n        draggable={true}\n      />\n    );\n  }\n\n  getJoker() {\n    return (\n      <Card\n        id={`spade_11`}\n        key={`spade_11`}\n        number=\"J\"\n        symbol=\"&#9824;\"\n        className={this.class}\n        onDragStart={this.drag.bind(this)}\n        draggable={true}\n      />\n    );\n  }\n}\n\nexport default Spade;\n","import React from \"react\";\nimport Card from \"./Card\";\n\nclass Diamond {\n  constructor() {\n    this.class = \"card red-cards \";\n  }\n\n  drag(event) {\n    event.dataTransfer.setData(\"card\", event.target.id);\n  }\n\n  addClass(className) {\n    this.class += className;\n  }\n\n  getCard(number) {\n    return (\n      <Card\n        id={`diamond_` + number}\n        key={`diamond_` + number}\n        number={number}\n        symbol=\"&#9830;\"\n        className={this.class}\n        onDragStart={this.drag.bind(this)}\n        draggable={true}\n      />\n    );\n  }\n\n  getAllFaceCards() {\n    return [this.getJoker(), this.getQueen(), this.getKing()];\n  }\n\n  getAce() {\n    return (\n      <Card\n        id={`diamond_1`}\n        key={`diamond_1`}\n        number=\"A\"\n        symbol=\"&#9830;\"\n        className={this.class}\n        onDragStart={this.drag.bind(this)}\n        draggable={true}\n      />\n    );\n  }\n\n  getKing() {\n    return (\n      <Card\n        id={`diamond_13`}\n        key={`diamond_13`}\n        number=\"K\"\n        symbol=\"&#9830;\"\n        className={this.class}\n        onDragStart={this.drag.bind(this)}\n        draggable={true}\n      />\n    );\n  }\n\n  getQueen() {\n    return (\n      <Card\n        id={`diamond_12`}\n        key={`diamond_12`}\n        number=\"Q\"\n        symbol=\"&#9830;\"\n        className={this.class}\n        onDragStart={this.drag.bind(this)}\n        draggable={true}\n      />\n    );\n  }\n\n  getJoker() {\n    return (\n      <Card\n        id={`diamond_11`}\n        key={`diamond_11`}\n        number=\"J\"\n        symbol=\"&#9830;\"\n        className={this.class}\n        onDragStart={this.drag.bind(this)}\n        draggable={true}\n      />\n    );\n  }\n}\n\nexport default Diamond;\n","import React from \"react\";\nimport Card from \"./Card\";\n\nclass Clubs {\n  constructor() {\n    this.class = \"card \";\n  }\n\n  drag(event) {\n    event.dataTransfer.setData(\"card\", event.target.id);\n  }\n\n  addClass(className) {\n    this.class += className;\n  }\n\n  getCard(number) {\n    return (\n      <Card\n        id={`club_` + number}\n        key={`club_` + number}\n        number={number}\n        symbol=\"&#9827;\"\n        className={this.class}\n        onDragStart={this.drag.bind(this)}\n        draggable={true}\n      />\n    );\n  }\n\n  getAllFaceCards() {\n    return [this.getJoker(), this.getQueen(), this.getKing()];\n  }\n\n  getAce() {\n    return (\n      <Card\n        id={`club_1`}\n        key={`club_1`}\n        number=\"A\"\n        symbol=\"&#9827;\"\n        className={this.class}\n        onDragStart={this.drag.bind(this)}\n        draggable={true}\n      />\n    );\n  }\n\n  getKing() {\n    return (\n      <Card\n        id={`club_13`}\n        key={`club_13`}\n        number=\"K\"\n        symbol=\"&#9827;\"\n        className={this.class}\n        onDragStart={this.drag.bind(this)}\n        draggable={true}\n      />\n    );\n  }\n\n  getQueen() {\n    return (\n      <Card\n        id={`club_12`}\n        key={`club_12`}\n        number=\"Q\"\n        symbol=\"&#9827;\"\n        className={this.class}\n        onDragStart={this.drag.bind(this)}\n        draggable={true}\n      />\n    );\n  }\n\n  getJoker() {\n    return (\n      <Card\n        id={`club_11`}\n        key={`club_11`}\n        number=\"J\"\n        symbol=\"&#9827;\"\n        className={this.class}\n        onDragStart={this.drag.bind(this)}\n        draggable={true}\n      />\n    );\n  }\n}\n\nexport default Clubs;\n","import React from \"react\";\nimport Card from \"./Card\";\n\nclass Hearts {\n  constructor() {\n    this.class = \"card red-cards \";\n  }\n\n  drag(event) {\n    event.dataTransfer.setData(\"card\", event.target.id);\n  }\n\n  addClass(className) {\n    this.class += className;\n  }\n\n  getCard(number) {\n    return (\n      <Card\n        id={`hearts_` + number}\n        key={`hearts_` + number}\n        number={number}\n        symbol=\"&#9829;\"\n        className={this.class}\n        onDragStart={this.drag.bind(this)}\n        draggable={true}\n      />\n    );\n  }\n\n  getAllFaceCards() {\n    return [this.getJoker(), this.getQueen(), this.getKing()];\n  }\n\n  getAce() {\n    return (\n      <Card\n        id={`hearts_1`}\n        key={`hearts_1`}\n        number=\"A\"\n        symbol=\"&#9829;\"\n        className={this.class}\n        onDragStart={this.drag.bind(this)}\n        draggable={true}\n      />\n    );\n  }\n\n  getKing() {\n    return (\n      <Card\n        id={`hearts_13`}\n        key={`hearts_13`}\n        number=\"K\"\n        symbol=\"&#9829;\"\n        className={this.class}\n        onDragStart={this.drag.bind(this)}\n        draggable={true}\n      />\n    );\n  }\n\n  getQueen() {\n    return (\n      <Card\n        id={`hearts_12`}\n        key={`hearts_12`}\n        number=\"Q\"\n        symbol=\"&#9829;\"\n        className={this.class}\n        onDragStart={this.drag.bind(this)}\n        draggable={true}\n      />\n    );\n  }\n\n  getJoker() {\n    return (\n      <Card\n        id={`hearts_11`}\n        key={`hearts_11`}\n        number=\"J\"\n        symbol=\"&#9829;\"\n        className={this.class}\n        onDragStart={this.drag.bind(this)}\n        draggable={true}\n      />\n    );\n  }\n}\n\nexport default Hearts;\n","import lodash from \"lodash\";\nimport Spade from \"./suit/Spade\";\nimport Diamond from \"./suit/Diamond\";\nimport Clubs from \"./suit/Clubs\";\nimport Hearts from \"./suit/Hearts\";\n\nclass Deck {\n  constructor() {\n    this.suits = {\n      spades: new Spade(),\n      diamonds: new Diamond(),\n      clubs: new Clubs(),\n      hearts: new Hearts()\n    };\n    this.deck = lodash.shuffle(this.getDeck());\n  }\n\n  getDeck() {\n    return this.getAllCardsOfSuit(\"spades\").concat(\n      this.getAllCardsOfSuit(\"diamonds\").concat(\n        this.getAllCardsOfSuit(\"hearts\").concat(this.getAllCardsOfSuit(\"clubs\"))\n      )\n    );\n  }\n\n  getNumberCards(suit) {\n    let cards = [];\n    for (let i = 2; i <= 10; i++) {\n      cards.push(this.suits[suit].getCard(i));\n    }\n    return cards;\n  }\n\n  getAllCardsOfSuit(suit) {\n    let cards = [];\n    let aceCard = this.suits[suit].getAce();\n    let numberCards = this.getNumberCards(suit);\n    let faceCards = this.suits[suit].getAllFaceCards();\n    cards.push(aceCard);\n    cards = cards.concat(numberCards);\n    cards = cards.concat(faceCards);\n    return cards;\n  }\n\n  getPileCards() {\n    let cards = this.deck.slice(0, 24);\n    return cards;\n  }\n\n  getWastePileCards() {\n    let cards = this.deck.slice(24);\n    return cards;\n  }\n}\n\nexport default Deck;\n","import React, { Component } from \"react\";\nimport Pile from \"./Pile\";\nimport Card from \"./suit/Card\";\nimport Foundation from \"./Foundation\";\nimport WastePiles from \"./WastePiles\";\nimport Deck from \"./Deck\";\n\nclass Game extends Component {\n  constructor(props) {\n    super(props);\n    this.deck = new Deck();\n    this.drawnCards = [];\n    this.pileCards = this.deck.getPileCards();\n    this.state = {\n      recent_drawn_card: <Card id=\"pile-card\" className=\"\" />\n    };\n  }\n\n  getOneCard() {\n    let card = this.pileCards.pop();\n    this.drawnCards.push(card);\n    this.setState({ recent_drawn_card: card });\n  }\n\n  renderPile() {\n    return (\n      <Pile\n        className={\"card face-down-card\"}\n        onClick={this.getOneCard.bind(this)}\n      />\n    );\n  }\n\n  renderFoundation() {\n    return <Foundation updateCard={this.updateRecentDrawnCards.bind(this)} />;\n  }\n\n  updateRecentDrawnCards() {\n    this.updateDrawnCards();\n    this.setState({ recent_drawn_card: this.drawnCards.pop() });\n  }\n\n  updateDrawnCards() {\n    this.drawnCards.pop();\n  }\n\n  renderWastePiles() {\n    return (\n      <WastePiles\n        cards={this.deck.getWastePileCards()}\n        updateCard={this.updateRecentDrawnCards.bind(this)}\n      />\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"row-one\">\n          <div className=\"pile\">\n            {this.renderPile() /* {pile} */}\n            {this.state.recent_drawn_card /* {drawn-card-from-pile} */}\n          </div>\n          <div>{this.renderFoundation()}</div>\n        </div>\n        <div>{this.renderWastePiles()}</div>\n      </div>\n    );\n  }\n}\n\nexport default Game;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Game from \"./Game\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      game: <Game />\n    };\n  }\n\n  renderGame() {\n    return this.state.game;\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"container\">{this.renderGame()}</div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}